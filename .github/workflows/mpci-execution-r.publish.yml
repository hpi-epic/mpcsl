name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
      - mpci-execution-r-publish

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  IMAGE_NAME: mpci-execution-r

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      
      - name: Update pcalg submodule
        run: git submodule update --init -- services/executionenvironments/r/executor/pcalg
        
      - name: Create IMAGE_TAG
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          
          echo IMAGE_TAG=$IMAGE_ID:$VERSION
          echo "IMAGE_TAG=$(echo $IMAGE_TAG)" >> $GITHUB_ENV
        
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Build image
        run: docker build services/executionenvironments/r/executor --file services/executionenvironments/r/executor/r-executor.Dockerfile --pull --tag ${{ env.IMAGE_TAG }}

      - name: Push image
        run: docker push ${{ env.IMAGE_TAG }}
